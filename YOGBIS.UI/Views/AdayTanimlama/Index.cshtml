@using Microsoft.AspNetCore.Identity
@inject SignInManager<YOGBIS.Data.DbModels.Kullanici> SignInManager
@inject UserManager<YOGBIS.Data.DbModels.Kullanici> UserManager
@model YOGBIS.Common.VModels.AdaylarVM
@{
    ViewData["Title"] = "Adaylar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-4">
        <div class="card shadow-lg rounded-lg mb-1">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>
                <b>Aday Yükleme/Güncellme</b>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="small font-weight-bold">Yükleme dosyası için seçim yapınız</label>
                            <select id="islemTipi" class="form-control-range form-control py-0" aria-label="Yükleme tipi seçimi">
                                <option selected value="">Seçim yapınız</option>
                                <option value="1">Aday Temel Bilgileri</option>
                                <option value="2">Aday Başvuru Bilgileri</option>
                                <option value="3">Aday İletişim Bilgileri</option>
                                <option value="4">Aday MYSS Bilgileri</option>
                                <option value="5">Aday TYS Bilgileri</option>
                                <option value="6">Aday MYSS Notları</option>
                                <option value="7">Aday TYS Notları</option>
                                <option value="8">Aday Bilgileri Güncelle</option>
                            </select>
                            <span id="yuklemeTipiHata" class="text-danger" style="display: none;">Lütfen yükleme tipini seçiniz!</span>
                        </div>
                    </div>
                    <div class="col-md-12" style="display:none" id="MulakatYil">
                        <div class="form-group">
                            <label asp-for="MulakatId" class="small mb-1 font-weight-bold">Mülakat Yılı</label>
                            @Html.DropDownListFor(u => u.MulakatId, new SelectList(ViewBag.Mulakatlar,
                                     "MulakatId", "MulakatDonemi"), "Mülakatı Seç", new { @id = "MulakatListesi", @class = "form-control-range form-control py-0" })
                            <span class="text-danger" asp-validation-for="MulakatId"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <form id="uploadForm" enctype="multipart/form-data" method="post" class="form-group m-0" onsubmit="return submitForm(event)">
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <div class="form-row">
                                        <div class="col-md-12">
                                            <label>Aday Bilgilerini yüklemek için Excel Dosyası Seçin</label>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-md-8">
                                            <input type="file" name="file" class="form-control w-100 p-1" accept=".xlsx" required style="width:500px" />
                                        </div>
                                        <div class="col-md-4">
                                            <button type="submit" class="btn btn-primary w-100">Yükle</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success col-md-12">
                @TempData["Message"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger col-md-12">
                <pre>@TempData["Error"]</pre>
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success col-md-12">
                @TempData["Success"]
            </div>
        }
        @if (TempData["Warning"] != null)
        {
            <div class="alert alert-warning col-md-12">
                @TempData["Warning"]
            </div>
        }

        <div id="progressBarContainer" style="display: none;">
            <div class="progress mb-1" role="progressbar" aria-label="İşlem durumu" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" style="width: 0%">0%</div>
            </div>
        </div>

        <div id="progressInfo" class="alert alert-info py-2 px-3" style="display: none;">
            <div>
                <span id="islemDurumu" class="text-dark text-sm">İşlem başlatılıyor...</span>
            </div>
            <div>
                <span class="text-dark text-sm">İşlenen Kayıt: </span>
                <span id="islemYapilan" class="text-dark text-sm">0</span> / <span id="toplamKayit" class="text-dark text-sm">0</span>
            </div>
            <div>
                <span class="text-dark text-sm">Tamamlanma: %</span><span id="yuzde" class="text-dark text-sm">0</span>
            </div>
        </div>

        <div id="islemSonucu" style="display: none;">
            <div id="warningAlert" class="alert alert-warning" style="display: none;"></div>
            <div id="successAlert" class="alert alert-success" style="display: none;"></div>
        </div>

        <div class="card shadow-lg rounded-lg m-0">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>
                <b>Aday Bilgileri</b>
            </div>
        </div>
        <div class="card-body bg-gradient-light">
            @await Component.InvokeAsync("AdayTemelBilgi")
        </div>
    </div>
    <div class="col-md-8">
        <div id="adayBasvuruBilgileriContainer">
            @await Component.InvokeAsync("AdayBasvuruBilgileri")
        </div>
        <div id="adayIletisimBilgileriContainer">
            @await Component.InvokeAsync("AdayIletisimBilgileri")
        </div>
        <div id="adayMYSSBilgileriContainer">
            @await Component.InvokeAsync("AdayMYSSBilgileri")
        </div>
        <div id="adayTYSBilgileriContainer">
            @await Component.InvokeAsync("AdayTYSBilgileri")
        </div>
    </div>
</div>

<!-- Aday Bilgileri Güncelleme Modal -->
<div class="modal fade" id="adayBilgileriGuncelleModal" tabindex="-1" role="dialog" aria-labelledby="adayBilgileriGuncelleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="adayBilgileriGuncelleModalLabel">Aday Bilgileri Güncelleme</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="mulakatYili">Mülakat Yılı</label>
                    <select class="form-control" id="mulakatYili" name="mulakatYili">
                        <option value="">Seçiniz...</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="adayTablosu">Güncellenecek Tablo</label>
                    <select class="form-control" id="adayTablosu" name="adayTablosu">
                        <option value="">Seçiniz...</option>
                        <option value="Adaylar">Aday Temel Bilgileri</option>
                        <option value="AdayBasvuruBilgileri">Aday Başvuru Bilgileri</option>
                        <option value="AdayIletisimBilgileri">Aday İletişim Bilgileri</option>
                        <option value="AdayMYSS">MYSS Bilgileri</option>
                        <option value="AdayTYS">TYS Bilgileri</option>
                        <option value="AdaySinavNotlar">Aday Sınav Notları</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Güncellenecek Alanlar</label>
                    <div id="alanlarContainer" class="border rounded p-3 mb-2" style="max-height: 300px; overflow-y: auto;">
                        <!-- Alanlar buraya dinamik olarak eklenecek -->
                    </div>
                    <div class="alert alert-info mt-2">
                        <i class="fas fa-info-circle"></i> Güncellemek istediğiniz alanları seçiniz, yükleme yapmak istediğiniz excel dosyası aynı kolon başlıkları içermeli ve aynı sıra ile olmalı
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row w-100">
                    <div class="col-md-10 text-left">
                        <form id="uploadForm" enctype="multipart/form-data" method="post" class="form-group m-0" onsubmit="return submitForm(event)">
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <div class="form-row">
                                        <div class="col-md-8">
                                            <input type="file" name="file" class="form-control w-100 p-1" accept=".xlsx" required style="width:500px" />
                                        </div>
                                        <div class="col-md-4">
                                            <button type="submit" class="btn btn-primary w-100">Yükle</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-2 text-right">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/5.5.2/bootbox.min.js"></script>

    <script type="text/javascript">
        var progressTimer;

        function submitForm(event) {
            event.preventDefault();
            var islemTipi = document.getElementById('islemTipi').value;
            var mulakatId = document.getElementById('MulakatListesi').value;
            var fileInput = document.querySelector('input[type="file"]');
            var formData = new FormData();

            if (!islemTipi) {
                document.getElementById('yuklemeTipiHata').style.display = 'block';
                return false;
            }

            if (!fileInput.files[0]) {
                bootbox.alert("Lütfen bir Excel dosyası seçiniz!");
                return false;
            }

            formData.append('file', fileInput.files[0]);
            formData.append('mulakatId', mulakatId);

            var url;
            switch (islemTipi) {
                case '1':
                    url = '@Url.Action("AdayTemelBilgileriYukle")';
                    break;
                case '2':
                    url = '@Url.Action("AdayBasvuruBilgileriYukle")';
                    break;
                case '3':
                    url = '@Url.Action("AdayIletisimBilgileriYukle")';
                    break;
                case '4':
                    url = '@Url.Action("AdayMYSSBilgileriYukle")';
                    break;
                case '5':
                    url = '@Url.Action("AdayTYSBilgileriYukle")';
                    break;
                case '6':
                    url = '@Url.Action("AdayMYSSNotlariYukle")';
                    break;
                case '7':
                    url = '@Url.Action("AdayTYSNotlariYukle")';
                    break;
                case '8':
                    url = '@Url.Action("AdayBilgileriGuncelle")';
                    break;
                default:
                    bootbox.alert("Geçersiz işlem tipi!");
                    return false;
            }

            document.getElementById('progressBarContainer').style.display = 'block';
            document.getElementById('progressInfo').style.display = 'block';
            document.getElementById('islemSonucu').style.display = 'none';

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener('progress', function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            $('#progressBar').width(percentComplete + '%');
                            $('#progressBar').text(percentComplete + '%');
                        }
                    }, false);
                    return xhr;
                },
                success: function (response) {
                    if (response.success) {
                        progressTimer = setInterval(checkProgress, 500);
                    } else {
                        showError("İşlem başarısız: " + (response.message || "Bilinmeyen hata"));
                    }
                },
                error: function (xhr, status, error) {
                    showError("Sunucu hatası: " + error);
                }
            });

            return false;
        }

        function showError(message) {
            clearInterval(progressTimer);
            $('#progressBarContainer').hide();
            $('#progressInfo').hide();
            $('#warningAlert').text(message).show();
            $('#successAlert').hide();
        }

        function showSuccess(message) {
            $('#warningAlert').hide();
            $('#successAlert').text(message).show();
        }

        // İşlem tipine göre mülakat yılı alanını göster/gizle
        $('#islemTipi').change(function() {
            var selectedValue = $(this).val();
            if (['2', '3', '4', '5', '6', '7'].includes(selectedValue)) {
                $('#MulakatYil').show();
            } else {
                $('#MulakatYil').hide();
            }
            $('#yuklemeTipiHata').hide();
        });

        function showProgress() {
            document.getElementById('progressBarContainer').style.display = 'block';
            document.getElementById('progressInfo').style.display = 'block';
            document.getElementById('islemSonucu').style.display = 'none';
            document.getElementById('islemDurumu').textContent = 'İşlem başlatılıyor...';
            document.getElementById('islemYapilan').textContent = '0';
            document.getElementById('toplamKayit').textContent = '0';
            document.getElementById('yuzde').textContent = '0';
            updateProgressBar(0, 0, 0);
            startProgressCheck();
        }

        function updateProgressBar(islemYapilan, toplamKayit, yuzde) {
            var progressBar = document.getElementById('progressBar');
            var progress = 0;

            if (toplamKayit > 0) {
                progress = (islemYapilan / toplamKayit) * 100;
            }

            progressBar.style.width = progress + '%';
            progressBar.textContent = Math.round(progress) + '%';

            document.getElementById('islemYapilan').textContent = islemYapilan;
            document.getElementById('toplamKayit').textContent = toplamKayit;
            document.getElementById('yuzde').textContent = Math.round(progress);
        }

        function startProgressCheck() {
            if (progressTimer) {
                clearInterval(progressTimer);
            }
            progressTimer = setInterval(checkProgress, 10); // Her 10ms'de bir kontrol et
        }

        function checkProgress() {
            fetch('@Url.Action("GetProgress")')
                .then(response => response.json())
                .then(data => {
                    if (!data) return;

                    var islemDurumu = document.getElementById('islemDurumu');
                    var warningAlert = document.getElementById('warningAlert');
                    var successAlert = document.getElementById('successAlert');
                    var islemTipi = document.getElementById('islemTipi').value;

                    switch (data.islemAsamasi) {
                        case 'Baslatiliyor':
                            islemDurumu.textContent = 'İşlem başlatılıyor...';
                            break;
                        case 'TCKontrol':
                            // TC kontrolü sadece aday temel bilgileri eklenirken gösterilecek
                            if (islemTipi === '1') {
                                islemDurumu.textContent = 'TC Kimlik numaraları kontrol ediliyor...';
                            }
                            break;
                        case 'KayitBasliyor':
                            islemDurumu.textContent = 'Kayıt işlemi başlatılıyor...';
                            break;
                        case 'Kayit':
                            islemDurumu.textContent = islemTipi === '1' ? 
                                'Aday temel bilgileri kaydediliyor...' :
                                'Kayıtlar işleniyor...';
                            break;
                        case 'Tamamlandi':
                            islemDurumu.textContent = 'İşlem tamamlandı';
                            clearInterval(progressTimer);
                            
                            if (data.error) {
                                warningAlert.textContent = data.error;
                                warningAlert.style.display = 'block';
                                successAlert.style.display = 'none';
                            } else {
                                var successMessage = data.success || 'İşlem başarıyla tamamlandı.';
                                if (data.basariliEklenen > 0) {
                                    successMessage += ` ${data.basariliEklenen} kayıt başarıyla eklendi.`;
                                }
                                successAlert.textContent = successMessage;
                                successAlert.style.display = 'block';
                                warningAlert.style.display = 'none';
                            }
                            break;
                    }

                    updateProgressBar(data.islemYapilan, data.toplamKayit, data.yuzde);
                })
                .catch(error => {
                    console.error('İlerleme kontrolü sırasında hata:', error);
                });
        }

        function testTC(tc) {
            alert('Tıklanan TC: ' + tc);
            console.log('Tıklanan TC:', tc);
        }

        function getAdayBasvuruBilgileri(tc) {
            console.log('TC gönderiliyor:', tc);

            $.ajax({
                url: '/AdayTanimlama/AdayBasvuruBilgileriniGetir',
                type: 'GET',
                data: { TC: tc },
                success: function (result) {
                    $('#adayBasvuruBilgileriContainer').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('Başvuru bilgileri getirme hatası:', error);
                    bootbox.alert({
                        title: '<i class="fas fa-exclamation-triangle text-danger"></i> Hata',
                        message: 'Aday başvuru bilgileri getirilirken bir hata oluştu.',
                        centerVertical: true
                    });
                }
            });
        }

        function getAdayIletisimBilgileri(tc) {
            console.log('TC gönderiliyor:', tc);

            $.ajax({
                url: '/AdayTanimlama/AdayIletisimBilgileriniGetir',
                type: 'GET',
                data: { TC: tc },
                success: function (result) {
                    $('#adayIletisimBilgileriContainer').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('İletişim bilgileri getirme hatası:', error);
                    bootbox.alert({
                        title: '<i class="fas fa-exclamation-triangle text-danger"></i> Hata',
                        message: 'Aday iletişim bilgileri getirilirken bir hata oluştu.',
                        centerVertical: true
                    });
                }
            });
        }

        function getAdayMYSSBilgileri(tc) {
            console.log('TC gönderiliyor:', tc);

            $.ajax({
                url: '/AdayTanimlama/AdayMYSSBilgileriniGetir',
                type: 'GET',
                data: { TC: tc },
                success: function (result) {
                    $('#adayMYSSBilgileriContainer').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('MYSS bilgileri getirme hatası:', error);
                    bootbox.alert({
                        title: '<i class="fas fa-exclamation-triangle text-danger"></i> Hata',
                        message: 'Aday MYSS bilgileri getirilirken bir hata oluştu.',
                        centerVertical: true
                    });
                }
            });
        }

        function getAdayTYSBilgileri(tc) {
            console.log('TC gönderiliyor:', tc);

            $.ajax({
                url: '/AdayTanimlama/AdayTYSBilgileriniGetir',
                type: 'GET',
                data: { TC: tc },
                success: function (result) {
                    $('#adayTYSBilgileriContainer').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('TYS bilgileri getirme hatası:', error);
                    bootbox.alert({
                        title: '<i class="fas fa-exclamation-triangle text-danger"></i> Hata',
                        message: 'Aday TYS bilgileri getirilirken bir hata oluştu.',
                        centerVertical: true
                    });
                }
            });
        }

    </script>

    <script>
        $(document).ready(function () {
            // İşlem tipine göre modal açma
            $('#islemTipi').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue === '8') {
                    getMulakatYillari();
                    $('#adayBilgileriGuncelleModal').modal('show');
                }
            });

            // Mülakat yıllarını getir
            function getMulakatYillari() {
                $.ajax({
                    url: '@Url.Action("GetMulakatYillari", "AdayTanimlama")',
                    type: 'GET',
                    success: function (data) {
                        var select = $('#mulakatYili');
                        select.empty();
                        select.append($('<option>', {
                            value: '',
                            text: 'Seçiniz...'
                        }));
                        $.each(data, function (index, item) {
                            select.append($('<option>', {
                                value: item,
                                text: item
                            }));
                        });
                    },
                    error: function () {
                        toastr.error('Mülakat yılları getirilirken bir hata oluştu.');
                    }
                });
            }

            // Tablo seçildiğinde alanları getir
            $('#adayTablosu').change(function() {
                var tabloAdi = $(this).val();
                if (tabloAdi) {
                    getTabloAlanlari(tabloAdi);
                } else {
                    $('#alanlarContainer').empty();
                }
            });

            // Tablo alanlarını getir
            function getTabloAlanlari(tabloAdi) {
                $.ajax({
                    url: '@Url.Action("GetTabloAlanlari", "AdayTanimlama")',
                    type: 'GET',
                    data: { tabloAdi: tabloAdi },
                    success: function (data) {
                        var container = $('#alanlarContainer');
                        container.empty();

                        // Her alan için checkbox oluştur
                        data.forEach(function(alan) {
                            var div = $('<div>', {
                                class: 'custom-control custom-checkbox mb-2'
                            });

                            var checkbox = $('<input>', {
                                type: 'checkbox',
                                class: 'custom-control-input',
                                id: 'alan_' + alan.name,
                                value: alan.name,
                                'data-sirano': alan.siraNo
                            });

                            var label = $('<label>', {
                                class: 'custom-control-label',
                                for: 'alan_' + alan.name,
                                text: alan.siraNo + '. ' + alan.name
                            });

                            div.append(checkbox).append(label);
                            container.append(div);
                        });
                    },
                    error: function () {
                        toastr.error('Tablo alanları getirilirken bir hata oluştu.');
                    }
                });
            }

            // Modal kapandığında select'leri ve alanları temizle
            $('#adayBilgileriGuncelleModal').on('hidden.bs.modal', function () {
                $('#mulakatYili').val('');
                $('#adayTablosu').val('');
                $('#alanlarContainer').empty();
            });

            // Güncelle butonuna tıklandığında
            $('#btnGuncelle').click(function () {
                var mulakatYili = $('#mulakatYili').val();
                var adayTablosu = $('#adayTablosu').val();
                var secilenAlanlar = [];

                // Seçili alanları topla
                $('#alanlarContainer input[type="checkbox"]:checked').each(function() {
                    secilenAlanlar.push($(this).val());
                });

                if (!mulakatYili || !adayTablosu) {
                    toastr.warning('Lütfen mülakat yılı ve tablo seçiniz.');
                    return;
                }

                if (secilenAlanlar.length === 0) {
                    toastr.warning('Lütfen en az bir alan seçiniz.');
                    return;
                }

                // TODO: Güncelleme işlemi için gerekli endpoint'e istek atılacak
                toastr.info('Güncelleme işlemi başlatılıyor...');
                console.log('Seçilen alanlar:', secilenAlanlar);
            });
        });
    </script>
}