@using Microsoft.AspNetCore.Identity
@inject SignInManager<YOGBIS.Data.DbModels.Kullanici> SignInManager
@inject UserManager<YOGBIS.Data.DbModels.Kullanici> UserManager
@model YOGBIS.Common.VModels.KomisyonPersonellerVM
@{
    ViewData["Title"] = "Komisyon Personel Tanımlama";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var yardimciPersoneller = ViewBag.KomisyonYardimciPersoneller;
    var ilgiliPersoneller = ViewBag.KomisyonIlgiliPersoneller;
}

@section Styles {
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">    
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css" />
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger row">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-pen mr-1"></i>
                <b>Komisyon Sorumlu Personel Ekleme/Güncelleme</b>
            </div>
            <div class="card-body">
                <form class="form-group m-0" asp-action="KomisyonKaydet" method="post">
                    @Html.HiddenFor(x => x.Id)
                    <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label class="small mb-1 font-weight-bold">Personel Görev Tanımı</label>
                            <select  class="form-control-range form-control py-2" aria-label="Default select example" id="personeltanim">
                                <option selected class="text-left">Seçim yapınız</option>
                                <option value="1">Yardımcı Personel</option>
                                <option  value="2">Komisyon Personeli</option>
                            </select>
                            <span class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row" style="display:none" id="yardimciperrow">
                        <div class="form-group col-md-12">
                            <label asp-for="PersonelId" class="small mb-1 font-weight-bold">Personeli Seç</label>
                            @foreach(var p in yardimciPersoneller)
                            {
                                <input type="hidden" class="yardimci-data" data-id="@p.Id" data-adsoyad="@p.AdSoyad" data-rolid="@p.RolId" />
                            }
                            @Html.DropDownListFor(u => u.PersonelId, 
                                new SelectList(yardimciPersoneller, "Id", "AdSoyad"),
                                "Yardımcı personeli seçiniz",
                                new { @class = "form-control-range form-control py-2" })
                            <span class="text-danger" asp-validation-for="PersonelId"></span>
                        </div>
                    </div>
                    <div class="form-row" style="display:none" id="ilgiliperrow">
                        <div class="form-group col-md-12">
                            <label asp-for="PersonelId" class="small mb-1 font-weight-bold">Personeli Seç</label>
                            @foreach(var p in ilgiliPersoneller)
                            {
                                <input type="hidden" class="ilgili-data" data-id="@p.Id" data-adsoyad="@p.AdSoyad" data-rolid="@p.RolId" />
                            }
                            @Html.DropDownListFor(u => u.PersonelId, 
                                new SelectList(ilgiliPersoneller, "Id", "AdSoyad"),
                                "İlgili personeli seçiniz", 
                                new { @class = "form-control-range form-control py-2" })
                            <span class="text-danger" asp-validation-for="PersonelId"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label class="small mb-1 font-weight-bold">Komisyonlar</label>
                            <ul class="list-group" id="komisyonlarListesi">
                                @foreach (var komisyon in ViewBag.Komisyonlar)
                                {
                                    <li class="list-group-item">
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" class="custom-control-input komisyon-checkbox" 
                                                   id="komisyon_@komisyon.Id" 
                                                   value="@komisyon.Id" 
                                                   name="SeciliKomisyonlar">
                                            <label class="custom-control-label" for="komisyon_@komisyon.Id">
                                                @komisyon.Ad
                                            </label>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-12">
                            <button type="button" id="kaydetButton" class="btn btn-success btn-sm text-white mb-1" style="width:100px">Kaydet</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        @await Component.InvokeAsync("KomisyonSorumluListesi")
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        $(document).ready(function () {
            var secilenRolId = null;
            
            // Debug için personel listelerini kontrol edelim
            console.log("Yardımcı Personeller Data:");
            $('.yardimci-data').each(function() {
                console.log({
                    id: $(this).data('id'),
                    adSoyad: $(this).data('adsoyad'),
                    rolId: $(this).data('rolid')
                });
            });
            
            console.log("İlgili Personeller Data:");
            $('.ilgili-data').each(function() {
                console.log({
                    id: $(this).data('id'),
                    adSoyad: $(this).data('adsoyad'),
                    rolId: $(this).data('rolid')
                });
            });
            
            var yardimciPersoneller = [];
            $('.yardimci-data').each(function() {
                yardimciPersoneller.push({
                    Id: $(this).data('id').toString(), // GUID'i string'e çevir
                    AdSoyad: $(this).data('adsoyad'),
                    RolId: $(this).data('rolid')
                });
            });
            
            var ilgiliPersoneller = [];
            $('.ilgili-data').each(function() {
                ilgiliPersoneller.push({
                    Id: $(this).data('id').toString(), // GUID'i string'e çevir
                    AdSoyad: $(this).data('adsoyad'),
                    RolId: $(this).data('rolid')
                });
            });

            $('#personeltanim').change(function() {
                var secilen = $(this).val();
                if(secilen === "1") {
                    $('#yardimciperrow').show();
                    $('#ilgiliperrow').hide();
                } else if(secilen === "2") {
                    $('#yardimciperrow').hide();
                    $('#ilgiliperrow').show();
                } else {
                    $('#yardimciperrow').hide();
                    $('#ilgiliperrow').hide();
                }
                // Personel seçimini sıfırla
                $('#PersonelId').val('');
                secilenRolId = null;
            });

            //personel seçimi değiştiğinde
            $('#PersonelId').change(function() {
                var secilenId = $(this).val().toString(); // GUID'i string'e çevir
                console.log("Seçilen PersonelId:", secilenId);
                
                if(secilenId) {
                    var personelTipi = $('#personeltanim').val();
                    console.log("Personel Tipi:", personelTipi);
                    
                    var personel;
                    if(personelTipi === "1") {
                        personel = yardimciPersoneller.find(p => p.Id === secilenId);
                        console.log("Bulunan Yardımcı Personel:", personel);
                    } else {
                        personel = ilgiliPersoneller.find(p => p.Id === secilenId);
                        console.log("Bulunan İlgili Personel:", personel);
                    }
                    
                    if(personel) {
                        secilenRolId = personel.RolId;
                        alert("Personel RolId: " + secilenRolId);
                    } else {
                        console.log("Personel bulunamadı!");
                    }
                }
            });

            $('#kaydetButton').click(function() {
                var personelTipi = $('#personeltanim').val();
                if(personelTipi === "Seçim yapınız") {
                    Swal.fire({
                        title: 'Uyarı!',
                        text: 'Lütfen personel görev tanımını seçiniz',
                        icon: 'warning',
                        confirmButtonText: 'Tamam'
                    });
                    return;
                }

                var personelId = $('#PersonelId').val();
                if (!personelId) {
                    Swal.fire({
                        title: 'Uyarı!',
                        text: 'Lütfen bir personel seçiniz',
                        icon: 'warning',
                        confirmButtonText: 'Tamam'
                    });
                    return;
                }

                if (!secilenRolId) {
                    Swal.fire({
                        title: 'Uyarı!',
                        text: 'Personelin rol bilgisi bulunamadı',
                        icon: 'warning',
                        confirmButtonText: 'Tamam'
                    });
                    return;
                }

                var secilenKomisyonlar = [];
                $('.komisyon-checkbox:checked').each(function() {
                    secilenKomisyonlar.push($(this).val());
                });

                if (secilenKomisyonlar.length === 0) {
                    Swal.fire({
                        title: 'Uyarı!',
                        text: 'Lütfen en az bir komisyon seçiniz',
                        icon: 'warning',
                        confirmButtonText: 'Tamam'
                    });
                    return;
                }

                var basariliKayitlar = 0;
                var hatalar = [];

                secilenKomisyonlar.forEach(function(komisyonId) {
                    var model = {
                        PersonelId: personelId,
                        KomisyonKullaniciId: komisyonId,
                        RolId: secilenRolId
                    };

                    $.ajax({
                        url: '@Url.Action("KomisyonPersonelKaydet", "KomisyonTanimlama")',
                        type: 'POST',
                        data: model,
                        async: false,
                        success: function(response) {
                            if (response.success) {
                                basariliKayitlar++;
                            } else {
                                hatalar.push(response.message);
                            }
                        },
                        error: function() {
                            hatalar.push('İşlem sırasında bir hata oluştu');
                        }
                    });
                });

                if (basariliKayitlar === secilenKomisyonlar.length) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: 'Tüm kayıtlar başarıyla tamamlandı',
                        icon: 'success',
                        confirmButtonText: 'Tamam'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }
                    });
                } else {
                    var mesaj = basariliKayitlar + " kayıt başarılı, " + hatalar.length + " kayıt başarısız\n\n";
                    mesaj += "Hatalar:\n" + hatalar.join('\n');
                    
                    Swal.fire({
                        title: 'Uyarı!',
                        text: mesaj,
                        icon: 'warning',
                        confirmButtonText: 'Tamam'
                    });
                }
            });
        });
    </script>
}
